version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: cryptotrade-postgres
    environment:
      POSTGRES_DB: cryptotrade
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - cryptotrade-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: cryptotrade-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cryptotrade-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: cryptotrade-backend
    environment:
      - RUST_LOG=debug
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cryptotrade
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - cryptotrade-network
    volumes:
      - ./backend:/app/backend:ro
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cryptotrade-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - cryptotrade-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  cryptotrade-network:
    driver: bridge
